name: microservices-practice-2

services:
  catalog-service:
    container_name: catalog-service
    image: ghcr.io/thivernale/catalog-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:postgresql://bookstore-db:5432/catalog-service
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      bookstore-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m

  order-service:
    container_name: order-service
    image: ghcr.io/thivernale/order-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ORDERS_CATALOG-SERVICE-URL: http://catalog-service:8081
      DB_URL: jdbc:postgresql://bookstore-db:5432/order-service
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: bookstore-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      bookstore-db:
        condition: service_healthy
      bookstore-rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m

  notification-service:
    container_name: notification-service
    image: ghcr.io/thivernale/notification-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:postgresql://bookstore-db:5432/notification-service
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: bookstore-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      MAIL_HOST: bookstore-mailhog
      MAIL_PORT: 1025
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      bookstore-db:
        condition: service_healthy
      bookstore-rabbitmq:
        condition: service_healthy
      bookstore-mailhog:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 700m
